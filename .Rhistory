# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(extrafont)
#CMDSTAN
library(cmdstanr)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield * Date + (1|div),
data = microclimate_shield_date_day,
chains = 4)
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield * Date + (1|div),
data = microclimate_shield_date_day,
chains = 4)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(extrafont)
#CMDSTAN
library(cmdstanr)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield * Date + (1|div),
data = microclimate_shield_date_day,
chains = 4)
plot(m_max_T_shield_date_day)
pp_check(m_max_T_shield_date_day)
summary(m_max_T_shield_date_day)
saveRDS(m_max_T_shield_date_day, file = "m_max_T_shield_date_day.rds")
sink("m_max_T_shield_date_day_summary.txt")
print(summary(m_max_T_shield_date_day))
sink()
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_shield_date_day_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_shield_date_day_pp_plot <- pp_check(m_max_T_shield_date_day)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_shield_date_day_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
m_max_T_shield_date_night<- brm(max_T2_95 ~ midshield * Date + (1|div), data = microclimate_shield_date_night, chains = 4)
plot(m_max_T_shield_date_night)
pp_check(m_max_T_shield_date_night)
saveRDS(m_max_T_shield_date_night, file = "m_max_T_shield_date_night.rds")
sink("m_max_T_shield_date_night_summary.txt")
print(summary(m_max_T_shield_date_night))
sink()
summary(m_max_T_shield_date_night)
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_shield_date_night_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_shield_date_night_pp_plot <- pp_check(m_max_T_shield_date_night)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_shield_date_night_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(extrafont)
#CMDSTAN
library(cmdstanr)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
m_max_T_shield_date_day_test <- brm(
max_T2_95 ~ midshield + (1|div),
data = microclimate_shield_date_day,
chains = 4)
plot(m_max_T_shield_date_day_test)
pp_check(m_max_T_shield_date_day_test)
summary(m_max_T_shield_date_day_test)
m_max_T_shield_date_day_test <- brm(
max_T2_95 ~ midshield + (1|date/div),
data = microclimate_shield_date_day,
chains = 4)
m_max_T_shield_date_day_test <- brm(
max_T2_95 ~ midshield + (1|Date/div),
data = microclimate_shield_date_day,
chains = 4)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(extrafont)
#CMDSTAN
library(cmdstanr)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
View(microclimate_shield_date_day)
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield * Date + (1|div),
data = microclimate_shield_date_day,
chains = 4)
View(microclimate_shield_date_day)
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield * Date + (1|div), family=binomial(link="logit"),
data = microclimate_shield_date_day,
chains = 4)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(extrafont)
#CMDSTAN
library(cmdstanr)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield * Date + (1|div), family=binomial(link="logit"),
data = microclimate_shield_date_day,
chains = 4)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(extrafont)
#CMDSTAN
library(cmdstanr)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield * Date + (1|div), family=binomial(link="logit"),
data = microclimate_shield_date_day,
chains = 4)
microclimate_shield_date_day$midshield
microclimate_shield_date_day$midshield_binomial<-if_else(microclimate_shield_date_day$midshield="present", 1, 0)
microclimate_shield_date_day$midshield_binomial<-if_else(microclimate_shield_date_day$midshield=="present", 1, 0)
microclimate_shield_date_day$midshield_binomial
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield_binomial * Date + (1|div), family=binomial(link="logit"),
data = microclimate_shield_date_day,
chains = 4)
microclimate_shield_date_day$midshield_binomial<-as.integer(if_else(microclimate_shield_date_day$midshield=="present", 1, 0))
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield_binomial * Date + (1|div), family=binomial(link="logit"),
data = microclimate_shield_date_day,
chains = 4)
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield_binomial * Date + (1|div), family=binomial(),
data = microclimate_shield_date_day,
chains = 4)
microclimate_shield_date_day$yday <- format(microclimate_shield_date_day$Date, "%j")
microclimate_shield_date_day$yday = as.numeric(microclimate_shield_date_day$yday)
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield_binomial * yday + (1|div), family=binomial,
data = microclimate_shield_date_day,
chains = 4)
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield_binomial * yday + (1|div), family=binomial,
data = microclimate_shield_date_day,
chains = 4)
?set_prior
priors<-prior(normal(0,1), coef=midshield_binomial)
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield_binomial * yday + (1|div),
prior=priors,
data = microclimate_shield_date_day,
chains = 4)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(extrafont)
#CMDSTAN
library(cmdstanr)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
microclimate_shield_date_day$yday <- format(microclimate_shield_date_day$Date, "%j")
microclimate_shield_date_day$yday = as.numeric(microclimate_shield_date_day$yday)
microclimate_shield_date_night$yday <- format(microclimate_shield_date_night$Date, "%j")
microclimate_shield_date_night$yday = as.numeric(microclimate_shield_date_night$yday)
microclimate_shield_date_day$midshield_binomial<-as.integer(if_else(microclimate_shield_date_day$midshield=="present", 1, 0))
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
priors<-prior(normal(0,1), coef=midshield_binomial)
m_max_T_shield_date_day <- brm(
max_T2_95 ~ midshield_binomial * yday + (1|div),
prior=priors,
data = microclimate_shield_date_day,
chains = 4,
iter=200,
warmup=150)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(emmeans)
library(extrafont)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
microclimate_shield_date_day$yday <- format(microclimate_shield_date_day$Date, "%j")
microclimate_shield_date_day$yday = as.numeric(microclimate_shield_date_day$yday)
microclimate_shield_date_night$yday <- format(microclimate_shield_date_night$Date, "%j")
microclimate_shield_date_night$yday = as.numeric(microclimate_shield_date_night$yday)
microclimate_shield_date_day$midshield_binomial<-as.integer(if_else(microclimate_shield_date_day$midshield=="present", 1, 0))
microclimate_shield_date_night$midshield_binomial<-as.integer(if_else(microclimate_shield_date_night$midshield=="present", 1, 0))
priors<-prior(cauchy(0,0.5), coef=midshield_binomial)
m_max_T_shield_date_night <- brm(
max_T2_95 ~ midshield_binomial * yday + (1|div),
prior=priors,
data = microclimate_shield_date_night,
chains = 4,
iter=4000,
warmup=1000)
plot(m_max_T_shield_date_night)
pp_check(m_max_T_shield_date_night)
summary(m_max_T_shield_date_night)
saveRDS(m_max_T_shield_date_night, file = "m_max_T_shield_date_night.rds")
sink("m_max_T_shield_date_night_summary.txt")
print(summary(m_max_T_shield_date_night))
sink()
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_shield_date_night_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_shield_date_night_pp_plot <- pp_check(m_max_T_shield_date_night)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_shield_date_night_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
