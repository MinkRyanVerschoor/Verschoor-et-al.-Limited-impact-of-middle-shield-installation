max_T1_90 = quantile(T1, 0.90, na.rm = TRUE),
max_T2_90 = quantile(T2, 0.90, na.rm = TRUE),
max_T3_90 = quantile(T3, 0.90, na.rm = TRUE)
) %>%
ungroup()  # Ungroup after summarisation
# Now join the original data back to keep 'probe' and 'midshield' columns
microclimate_shield_total_day <- microclimate_shield_total_day %>%
left_join(
microclimate_shield %>%
select(subplot, probe, midshield) %>%
distinct(),  # Keep distinct rows of 'probe' and 'midshield' for each subplot & Date
by = c("subplot")
) |>
left_join(bioclive_design)
# Calculate the max per probe, the mean per probe for the total period, but group only by 'subplot' and 'Date'
microclimate_shield_total_night <- microclimate_shield_night %>%
group_by(subplot) %>%  # Group by subplot and Date only
dplyr::summarise(
min_SWC = min(SWC, na.rm = TRUE),
max_T1 = max(T1, na.rm = TRUE),
max_T2 = max(T2, na.rm = TRUE),
max_T3 = max(T3, na.rm = TRUE),
min_SWC_1 = quantile(SWC, 0.01, na.rm = TRUE),
max_T1_99 = quantile(T1, 0.99, na.rm = TRUE),
max_T2_99 = quantile(T2, 0.99, na.rm = TRUE),
max_T3_99 = quantile(T3, 0.99, na.rm = TRUE),
min_SWC_5 = quantile(SWC, 0.05, na.rm = TRUE),
max_T1_95 = quantile(T1, 0.95, na.rm = TRUE),
max_T2_95 = quantile(T2, 0.95, na.rm = TRUE),
max_T3_95 = quantile(T3, 0.95, na.rm = TRUE),
min_SWC_10 = quantile(SWC, 0.10, na.rm = TRUE),
max_T1_90 = quantile(T1, 0.90, na.rm = TRUE),
max_T2_90 = quantile(T2, 0.90, na.rm = TRUE),
max_T3_90 = quantile(T3, 0.90, na.rm = TRUE)
) %>%
ungroup()  # Ungroup after summarisation
# Now join the original data back to keep 'probe' and 'midshield' columns
microclimate_shield_total_night <- microclimate_shield_total_night %>%
left_join(
microclimate_shield %>%
select(subplot, probe, midshield) %>%
distinct(),  # Keep distinct rows of 'probe' and 'midshield' for each subplot & Date
by = c("subplot")
) |>
left_join(bioclive_design)
# Chunk 7: Creating the mean and max dataframe
# Calculate the max per probe, the mean per probe per day
# Calculate the max per probe, the mean per probe per day, but group only by 'subplot' and 'Date'
microclimate_shield_date_day <- microclimate_shield_day %>%
group_by(subplot, Date) %>%  # Group by subplot and Date only
dplyr::summarise(
min_SWC = min(SWC, na.rm = TRUE),
max_T1 = max(T1, na.rm = TRUE),
max_T2 = max(T2, na.rm = TRUE),
max_T3 = max(T3, na.rm = TRUE),
min_SWC_1 = quantile(SWC, 0.01, na.rm = TRUE),
max_T1_99 = quantile(T1, 0.99, na.rm = TRUE),
max_T2_99 = quantile(T2, 0.99, na.rm = TRUE),
max_T3_99 = quantile(T3, 0.99, na.rm = TRUE),
min_SWC_5 = quantile(SWC, 0.05, na.rm = TRUE),
max_T1_95 = quantile(T1, 0.95, na.rm = TRUE),
max_T2_95 = quantile(T2, 0.95, na.rm = TRUE),
max_T3_95 = quantile(T3, 0.95, na.rm = TRUE),
min_SWC_10 = quantile(SWC, 0.10, na.rm = TRUE),
max_T1_90 = quantile(T1, 0.90, na.rm = TRUE),
max_T2_90 = quantile(T2, 0.90, na.rm = TRUE),
max_T3_90 = quantile(T3, 0.90, na.rm = TRUE)
) %>%
ungroup()  # Ungroup after summarisation
# Now join the original data back to keep 'probe' and 'midshield' columns
microclimate_shield_date_day <- microclimate_shield_date_day %>%
left_join(
microclimate_shield %>%
select(subplot, Date, probe, midshield) %>%
distinct(),  # Keep distinct rows of 'probe' and 'midshield' for each subplot & Date
by = c("subplot", "Date")
) |>
left_join(bioclive_design)
# Calculate the max per probe, the mean per probe for the total period, but group only by 'subplot' and 'Date'
microclimate_shield_date_night <- microclimate_shield_night %>%
group_by(subplot, Date) %>%  # Group by subplot and Date only
dplyr::summarise(
min_SWC = min(SWC, na.rm = TRUE),
max_T1 = max(T1, na.rm = TRUE),
max_T2 = max(T2, na.rm = TRUE),
max_T3 = max(T3, na.rm = TRUE),
min_SWC_1 = quantile(SWC, 0.01, na.rm = TRUE),
max_T1_99 = quantile(T1, 0.99, na.rm = TRUE),
max_T2_99 = quantile(T2, 0.99, na.rm = TRUE),
max_T3_99 = quantile(T3, 0.99, na.rm = TRUE),
min_SWC_5 = quantile(SWC, 0.05, na.rm = TRUE),
max_T1_95 = quantile(T1, 0.95, na.rm = TRUE),
max_T2_95 = quantile(T2, 0.95, na.rm = TRUE),
max_T3_95 = quantile(T3, 0.95, na.rm = TRUE),
min_SWC_10 = quantile(SWC, 0.10, na.rm = TRUE),
max_T1_90 = quantile(T1, 0.90, na.rm = TRUE),
max_T2_90 = quantile(T2, 0.90, na.rm = TRUE),
max_T3_90 = quantile(T3, 0.90, na.rm = TRUE)
) %>%
ungroup()  # Ungroup after summarisation
# Now join the original data back to keep 'probe' and 'midshield' columns
microclimate_shield_date_night <- microclimate_shield_date_night %>%
left_join(
microclimate_shield %>%
select(subplot, probe, midshield) %>%
distinct(),  # Keep distinct rows of 'probe' and 'midshield' for each subplot & Date
by = c("subplot")
) |>
left_join(bioclive_design)
# Chunk 8: Saving the data
#Saving the cleaned data
# Define the output directory
output_dir <- file.path(data_path, "Data/Cleaned")
# Define the full file path for the CSV
output_file_1 <- file.path(output_dir, "microclimate_shield_total_day.csv")
output_file_2 <- file.path(output_dir, "microclimate_shield_total_night.csv")
output_file_3 <- file.path(output_dir, "microclimate_shield_date_night.csv")
output_file_4 <- file.path(output_dir, "microclimate_shield_date_day.csv")
# Save the filtered data to a CSV file using fwrite
data.table::fwrite(microclimate_shield_total_day, file = output_file_1)
data.table::fwrite(microclimate_shield_total_night, file = output_file_2)
data.table::fwrite(microclimate_shield_date_night, file = output_file_3)
data.table::fwrite(microclimate_shield_date_day, file = output_file_4)
# Confirmation message
cat("Data saved to:", output_file_1, "\n")
cat("Data saved to:", output_file_2, "\n")
cat("Data saved to:", output_file_3, "\n")
cat("Data saved to:", output_file_4, "\n")
View(microclimate_shield_date_day)
View(microclimate_shield_date_night)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(extrafont)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv")
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
fonts()
Plot_ST_shield = ggplot(microclimate_shield_total, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16,
margin = margin(t = 10, r = 0, b = 0, l = 0)), # Adds 10 units of space to the bottom,
axis.title.y = element_text(family = "Arial", size = 16,
margin = margin(t = 0, r = 10, b = 0, l = 0)), # Adds 10 units of space to the right
legend.title = element_text(family = "Arial", size = 16),
legend.text = element_text(family = "Arial", size = 16),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield = ggplot(microclimate_shield_day, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16,
margin = margin(t = 10, r = 0, b = 0, l = 0)), # Adds 10 units of space to the bottom,
axis.title.y = element_text(family = "Arial", size = 16,
margin = margin(t = 0, r = 10, b = 0, l = 0)), # Adds 10 units of space to the right
legend.title = element_text(family = "Arial", size = 16),
legend.text = element_text(family = "Arial", size = 16),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
Plot_ST_shield = ggplot(microclimate_shield_night, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16,
margin = margin(t = 10, r = 0, b = 0, l = 0)), # Adds 10 units of space to the bottom,
axis.title.y = element_text(family = "Arial", size = 16,
margin = margin(t = 0, r = 10, b = 0, l = 0)), # Adds 10 units of space to the right
legend.title = element_text(family = "Arial", size = 16),
legend.text = element_text(family = "Arial", size = 16),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
View(microclimate_shield_night)
Plot_ST_shield = ggplot(microclimate_shield_night, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_99, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16,
margin = margin(t = 10, r = 0, b = 0, l = 0)), # Adds 10 units of space to the bottom,
axis.title.y = element_text(family = "Arial", size = 16,
margin = margin(t = 0, r = 10, b = 0, l = 0)), # Adds 10 units of space to the right
legend.title = element_text(family = "Arial", size = 16),
legend.text = element_text(family = "Arial", size = 16),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
Plot_ST_shield = ggplot(microclimate_shield_night, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_90, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16,
margin = margin(t = 10, r = 0, b = 0, l = 0)), # Adds 10 units of space to the bottom,
axis.title.y = element_text(family = "Arial", size = 16,
margin = margin(t = 0, r = 10, b = 0, l = 0)), # Adds 10 units of space to the right
legend.title = element_text(family = "Arial", size = 16),
legend.text = element_text(family = "Arial", size = 16),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
Plot_ST_shield = ggplot(microclimate_shield_day, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = dist_wall, fill = dist_wall)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16,
margin = margin(t = 10, r = 0, b = 0, l = 0)), # Adds 10 units of space to the bottom,
axis.title.y = element_text(family = "Arial", size = 16,
margin = margin(t = 0, r = 10, b = 0, l = 0)), # Adds 10 units of space to the right
legend.title = element_text(family = "Arial", size = 16),
legend.text = element_text(family = "Arial", size = 16),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
Plot_ST_shield = ggplot(microclimate_shield_day, aes(x = factor(dist_wall, levels = c('1', '2', '3', '4')), y = max_T2_95, color = dist_wall, fill = dist_wall)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16,
margin = margin(t = 10, r = 0, b = 0, l = 0)), # Adds 10 units of space to the bottom,
axis.title.y = element_text(family = "Arial", size = 16,
margin = margin(t = 0, r = 10, b = 0, l = 0)), # Adds 10 units of space to the right
legend.title = element_text(family = "Arial", size = 16),
legend.text = element_text(family = "Arial", size = 16),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
as.factor(dist_wall)
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
dist_wall = as.factor(dist_wall)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(extrafont)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(dist_wall = as.factor(dist_wall))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(dist_wall = as.factor(dist_wall))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(dist_wall = as.factor(dist_wall))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(dist_wall = as.factor(dist_wall))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
fonts()
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(extrafont)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
fonts()
Plot_ST_shield = ggplot(microclimate_shield_day, aes(x = factor(dist_wall, levels = c('1', '2', '3', '4')), y = max_T2_95, color = dist_wall, fill = dist_wall)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16,
margin = margin(t = 10, r = 0, b = 0, l = 0)), # Adds 10 units of space to the bottom,
axis.title.y = element_text(family = "Arial", size = 16,
margin = margin(t = 0, r = 10, b = 0, l = 0)), # Adds 10 units of space to the right
legend.title = element_text(family = "Arial", size = 16),
legend.text = element_text(family = "Arial", size = 16),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
#For the total
m_max_T_shield_dist = brm(max_T2 ~ dist_wall + (1|div), data = microclimate_shield_day)
plot(m_max_T_shield_day)
plot(m_max_T_shield_dist)
summary(m_max_T_shield_dist)
#For the total
m_max_T_shield_day = brm(max_T2 ~ midshield + (1|div), data = microclimate_shield_day)
plot(m_max_T_shield_day)
summary(m_max_T_shield_day)
#For the total
m_max_T_shield_day = brm(max_T2_90 ~ midshield + (1|div), data = microclimate_shield_day)
plot(m_max_T_shield_day)
summary(m_max_T_shield_day)
#For the total
m_max_T_shield_day = brm(max_T2_95 ~ midshield + (1|div), data = microclimate_shield_day)
plot(m_max_T_shield_day)
summary(m_max_T_shield_day)
pp_check(m_max_T_shield_day)
#For the total
m_max_T_shield_day = brm(max_T2_99 ~ midshield + (1|div), data = microclimate_shield_day)
plot(m_max_T_shield_day)
summary(m_max_T_shield_day)
pp_check(m_max_T_shield_day)
m_max_T_shield_date_day<- brm(max_T2_95 ~ midshield * Date + (1|div), data = microclimate_shield_day)
m_max_T_shield_date_day<- brm(max_T2_95 ~ midshield * Date + (1|div), data = microclimate_shield_date_day)
