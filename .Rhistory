# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
m_max_T_shield = lm(max_T2 ~ midshield, data = microclimate_shield_total)
plot(m_max_T_shield)
summary(m_max_T_shield)
anova(m_max_T_shield)
Plot_ST_shield = ggplot(microclimate_shield_total, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "midshield", y = "Maximum daily temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm")
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
Plot_ST_shield = ggplot(microclimate_shield_total, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "midshield", y = "Maximum daily temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm") +
) +
Plot_ST_shield = ggplot(microclimate_shield_total, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "midshield", y = "Maximum daily temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm") + panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
Plot_ST_shield
Plot_ST_shield = ggplot(microclimate_shield_total, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "midshield", y = "Maximum daily temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
m_max_T_shield_day = lmer(max_T2 ~ midshield + (1 | Date), data = microclimate_shield_day)
plot(m_max_T_shield_day)
summary(m_max_T_shield_day)
anova(m_max_T_shield_day)
Plot_ST_shield = ggplot(microclimate_shield_total, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "midshield", y = "Maximum daily temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
Plot_ST_shield = ggplot(microclimate_shield_total, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "midshield", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
#For the total
m_max_T_shield = lm(max_T2 ~ midshield, data = microclimate_shield_total)
summary(m_max_T_shield)
Plot_ST_day_shield = ggplot(microclimate_shield, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
# Plot summary statistics (mean) with stat_summary
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
# Add error bars (mean ± CI or SE) using stat_summary
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3) +
# Add a line connecting the mean points using stat_summary
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
# Customize labels and theme
labs(x = "Date", y = "Maximum daily temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
# Customize the x-axis to handle Date as continuous and display all dates
scale_x_date(
breaks = scales::date_breaks("2 days"),  # Display every day on the x-axis
labels = scales::date_format("%b %d"),  # Format the date labels as "Month Day"
expand = expansion(mult = c(0.05, 0.05))  # Add some space at both ends of the plot
) +
# Set color scale for midshield
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# Print the plot
Plot_ST_day_shield
Plot_ST_day_shield = ggplot(microclimate_shield_day, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
# Plot summary statistics (mean) with stat_summary
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
# Add error bars (mean ± CI or SE) using stat_summary
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3) +
# Add a line connecting the mean points using stat_summary
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
# Customize labels and theme
labs(x = "Date", y = "Maximum daily temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
# Customize the x-axis to handle Date as continuous and display all dates
scale_x_date(
breaks = scales::date_breaks("2 days"),  # Display every day on the x-axis
labels = scales::date_format("%b %d"),  # Format the date labels as "Month Day"
expand = expansion(mult = c(0.05, 0.05))  # Add some space at both ends of the plot
) +
# Set color scale for midshield
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# Print the plot
Plot_ST_day_shield
#Per day
m_max_T_shield_day = lmer(max_T2 ~ midshield + (1 | Date), data = microclimate_shield_day)
summary(m_max_T_shield_day)
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_day.csv")
microclimate_shield_total= load_data("microclimate_shield_total.csv")
# Ensure that Date is in Date format
microclimate_shield_day$Date <- as.Date(microclimate_shield_day$Date)
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
Plot_ST_shield = ggplot(microclimate_shield_total, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "midshield", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
Plot_ST_day_shield = ggplot(microclimate_shield_day, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
# Plot summary statistics (mean) with stat_summary
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
# Add error bars (mean ± CI or SE) using stat_summary
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3) +
# Add a line connecting the mean points using stat_summary
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
# Customize labels and theme
labs(x = "Date", y = "Maximum daily temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
# Customize the x-axis to handle Date as continuous and display all dates
scale_x_date(
breaks = scales::date_breaks("2 days"),  # Display every day on the x-axis
labels = scales::date_format("%b %d"),  # Format the date labels as "Month Day"
expand = expansion(mult = c(0.05, 0.05))  # Add some space at both ends of the plot
) +
# Set color scale for midshield
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# Print the plot
Plot_ST_day_shield
m_max_T_shield = lm(max_T2 ~ midshield*Date, data = microclimate_shield_total)
m_max_T_shield = lm(max_T2 ~ midshield*Date, data = microclimate_shield_day)
plot(m_max_T_shield)
summary(m_max_T_shield)
anova(m_max_T_shield)
# Loading and installing the required Packages
install.packages("brms")
library(brms)
#Per day
m_max_T_shield_day = brm(max_T2 ~ midshield + (1 | Date), data = microclimate_shield_day)
summary(m_max_T_shield_day)
pp_check(m_max_T_shield_day)
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_day.csv")
# Load configuration settings for collaborative data loading
source("config.R")
# Define potential OneDrive paths for both Windows and macOS
potential_paths <- c(
"C:/Users/minkv/OneDrive - Universiteit Utrecht/Projects/2025_BioCliVETomstShielding"
# Add macOS paths here if necessary, e.g.
# "/Users/yourusername/OneDrive - Universiteit Utrecht/Projects/2024_Verschoor_FacilitationTraits"
)
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Function to find OneDrive path dynamically
find_onedrive_path <- function() {
# Define potential OneDrive paths for both Windows and macOS
potential_paths <- c(
"C:/Users/minkv/OneDrive - Universiteit Utrecht/Projects/2025_BioCliVETomstShielding"
# Add macOS paths here if necessary, e.g.
# "/Users/yourusername/OneDrive - Universiteit Utrecht/Projects/2025_BioCliVETomstShielding"
)
# Check which path exists and return it
for (path in potential_paths) {
if (dir.exists(path)) {
return(path)
}
}
stop("OneDrive path not found. Please set it manually.")
}
# Set the data_path in the global environment
data_path <<- find_onedrive_path()
# Generalized function to load data from any sub folder of `data_path`
load_data <- function(file_name) {
# Search for the file recursively under the base data_path
file_path <- list.files(data_path, pattern = file_name, full.names = TRUE, recursive = TRUE)
# Check if the file exists
if (length(file_path) == 0) {
stop(paste("File not found:", file_name))
}
# Load the CSV file using fread from data.table
return(data.table::fread(file_path[1], header = TRUE))  # Return the first match
}
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_day.csv")
microclimate_shield_total= load_data("microclimate_shield_total.csv")
# Ensure that Date is in Date format
microclimate_shield_day$Date <- as.Date(microclimate_shield_day$Date)
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
Plot_ST_shield = ggplot(microclimate_shield_total, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) + # Adjusted dot size and position
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "midshield", y = "Maximum temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
Plot_ST_shield
Plot_ST_day_shield = ggplot(microclimate_shield_day, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
# Plot summary statistics (mean) with stat_summary
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
# Add error bars (mean ± CI or SE) using stat_summary
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.3) +
# Add a line connecting the mean points using stat_summary
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
# Customize labels and theme
labs(x = "Date", y = "Maximum daily temperature at 1cm (°C)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "calibri", size = 20),
axis.text.y = element_text(family = "calibri", size = 24),
axis.title.x = element_text(family = "calibri", size = 24, face = "bold"),
axis.title.y = element_text(family = "calibri", size = 24, face = "bold"),
legend.title = element_text(family = "calibri", size = 24, face = "bold"),
legend.text = element_text(family = "calibri", size = 20),
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5) # Add minor gridlines
) +
# Customize the x-axis to handle Date as continuous and display all dates
scale_x_date(
breaks = scales::date_breaks("2 days"),  # Display every day on the x-axis
labels = scales::date_format("%b %d"),  # Format the date labels as "Month Day"
expand = expansion(mult = c(0.05, 0.05))  # Add some space at both ends of the plot
) +
# Set color scale for midshield
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# Print the plot
Plot_ST_day_shield
#For the total
m_max_T_shield = brm(max_T2 ~ midshield)
#For the total
m_max_T_shield = brm(max_T2 ~ midshield, data = microclimate_shield)
#For the total
m_max_T_shield = brm(max_T2 ~ midshield, data = microclimate_shield_total)
plot(m_max_T_shield)
summary(m_max_T_shield)
pp_check(m_max_T_shield)
m_max_T_shield_day = brm(max_T2 ~ midshield + (1 | Date), data = microclimate_shield_day)
plot(m_max_T_shield_day)
summary(m_max_T_shield_day)
pp_check(m_max_T_shield_day)
m_max_T_shield_day = brm(max_T2 ~ midshield + (midshield | Date), data = microclimate_shield_day)
plot(m_max_T_shield_day)
pp_check(m_max_T_shield_day)
)
summary(m_max_T_shield_day)
plot(residuals(m_max_T_shield_day) ~ fitted(m_max_T_shield_day))
m_max_T_shield_day_new <- brm(
max_T2 ~ midshield + (1 | Date),
data = microclimate_shield_day,
iter = 4000, warmup = 2000
)
plot(m_max_T_shield_day)
pp_check(m_max_T_shield_day)
