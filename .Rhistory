labels = scales::date_format("%b %d"),  # Format the date labels as "Month Day"
expand = expansion(mult = c(0.05, 0.05))  # Add some space at both ends of the plot
) +
# Set color scale for midshield
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# Print the plot
Plot_ST_shield_night_date
combined_plot <- Plot_ST_shield_day + Plot_ST_shield_day_date + Plot_ST_shield_night+ Plot_ST_shield_night_date +
plot_layout(ncol = 2, widths = c(1, 1)) +
plot_annotation(tag_levels = "A")
# Display the combined plot
combined_plot
# Display the combined plot
combined_plot
# Define the output directory
output_dir <- file.path(data_path, "Figures/")
# Ensure the directory exists (create it if not)
if (!dir.exists(output_dir)) {
dir.create(output_dir, recursive = TRUE)
}
# Define the full file path for the plot
output_file_plot <- file.path(output_dir, "Plot_final.png")
# Save the plot using ggsave
ggsave(filename = output_file_plot, plot = combined_plot, width = 14, height = 10, dpi = 300)
# ------- Daytime Violin Plot -------- #
Plot_ST_shield_day = ggplot(microclimate_shield_day, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Max temp (°C) at 1 cm during day (06:00–21:00)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16, margin = margin(t = 10)),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5)
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Daytime Time Series Plot -------- #
Plot_ST_shield_day_date = ggplot(microclimate_shield_date_day, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
labs(x = "Date", y = "Max daily temp (°C) at 1 cm during day") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16, margin = margin(t = 10)),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5)
) +
scale_x_date(
breaks = scales::date_breaks("3 days"),
labels = scales::date_format("%b %d"),
expand = expansion(mult = c(0.05, 0.05))
) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Nighttime Violin Plot -------- #
Plot_ST_shield_night = ggplot(microclimate_shield_night, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Max temp (°C) at 1 cm during night (21:00–06:00)") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16, margin = margin(t = 10)),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5)
) +
scale_x_discrete(expand = expansion(mult = c(0.1, 0.1))) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Nighttime Time Series Plot -------- #
Plot_ST_shield_night_date = ggplot(microclimate_shield_date_night, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
labs(x = "Date", y = "Max daily temp (°C) at 1 cm during night") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16, margin = margin(t = 10)),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none",
legend.key = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
panel.grid.minor = element_line(color = "gray", linetype = "dashed", size = 0.5)
) +
scale_x_date(
breaks = scales::date_breaks("3 days"),
labels = scales::date_format("%b %d"),
expand = expansion(mult = c(0.05, 0.05))
) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Combine Plots -------- #
combined_plot <- Plot_ST_shield_day + Plot_ST_shield_day_date + Plot_ST_shield_night + Plot_ST_shield_night_date +
plot_layout(ncol = 2, widths = c(1, 1)) +
plot_annotation(tag_levels = "A")
# Save the plot
output_dir <- file.path(data_path, "Figures/")
if (!dir.exists(output_dir)) dir.create(output_dir, recursive = TRUE)
output_file_plot <- file.path(output_dir, "Plot_final.png")
ggsave(filename = output_file_plot, plot = combined_plot, width = 14, height = 10, dpi = 300)
View(microclimate_shield_night)
View(microclimate_shield_date_night)
View(microclimate_shield_date_day)
# ------- Plot A: Daytime Violin Plot (no x-label) -------- #
Plot_A <- ggplot(microclimate_shield_day, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3, position = position_dodge(width = 0.7)) +
labs(y = "Max temp (°C) at 1 cm during day") +
theme_classic() +
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot B: Daytime Time Series (no x-label) -------- #
Plot_B <- ggplot(microclimate_shield_date_day, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
labs(y = "Max daily temp (°C) at 1 cm during day") +
theme_classic() +
theme(
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_x_date(breaks = scales::date_breaks("3 days"),
labels = scales::date_format("%b %d")) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot C: Nighttime Violin Plot (with x-label) -------- #
Plot_C <- ggplot(microclimate_shield_night, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Max temp (°C) at 1 cm during night") +
theme_classic() +
theme(
axis.text.x = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16, margin = margin(t = 10)),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot D: Nighttime Time Series (with x-label) -------- #
Plot_D <- ggplot(microclimate_shield_date_night, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
labs(x = "Date", y = "Max daily temp (°C) at 1 cm during night") +
theme_classic() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16, margin = margin(t = 10)),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_x_date(breaks = scales::date_breaks("3 days"),
labels = scales::date_format("%b %d")) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Combine and Adjust Layout -------- #
combined_plot <- (Plot_A + Plot_B) / (Plot_C + Plot_D) +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(size = 20, face = "bold"),
plot.tag.position = c(0, 1.05))  # Moves tags (A–D) slightly up
# Save to file
output_dir <- file.path(data_path, "Figures/")
if (!dir.exists(output_dir)) dir.create(output_dir, recursive = TRUE)
ggsave(file.path(output_dir, "Plot_final_adjusted.png"), combined_plot, width = 14, height = 12, dpi = 300)
#For the total
m_max_T_shield_dist = brm(max_T2_95 ~ dist_wall + (1|div), data = microclimate_shield_day,   chains = 4,
iter=4000,
warmup=1000)
plot(m_max_T_shield_dist)
summary(m_max_T_shield_dist)
pp_check(m_max_T_shield_dist)
saveRDS(m_max_T_shield_dist, file = "m_max_T_shield_dist.rds")
sink("m_max_T_shield_dist_summary.txt")
print(summary(m_max_T_shield_dist))
sink()
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_shield_dist_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_shield_dist_pp_plot <- pp_check(m_max_T_shield_dist)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_shield_dist_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
priors<-prior(cauchy(0,0.5), coef=midshield_binomial)
priors<-prior(cauchy(0,0.5), coef=midshield_binomial)
m_max_T_shield_date_night <- brm(
max_T2_95 ~ midshield_binomial * yday + (1|div),
prior=priors,
data = microclimate_shield_date_night,
chains = 4,
iter=4000,
warmup=1000)
# ------- Plot A: Daytime Violin Plot (no x-title) -------- #
Plot_A <- ggplot(microclimate_shield_day, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3, position = position_dodge(width = 0.7)) +
labs(y = "Max temp (°C) at 1 cm during day") +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot B: Daytime Time Series (no x-title) -------- #
Plot_B <- ggplot(microclimate_shield_date_day, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
labs(y = "Max daily temp (°C) at 1 cm during day") +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_x_date(breaks = scales::date_breaks("3 days"),
labels = scales::date_format("%b %d")) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot C: Nighttime Violin Plot -------- #
Plot_C <- ggplot(microclimate_shield_night, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Max temp (°C) at 1 cm during night") +
theme_minimal() +
theme(
axis.text.x = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16, margin = margin(t = 10)),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot D: Nighttime Time Series -------- #
Plot_D <- ggplot(microclimate_shield_date_night, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
labs(x = "Date", y = "Max daily temp (°C) at 1 cm during night") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16, margin = margin(t = 10)),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_x_date(breaks = scales::date_breaks("3 days"),
labels = scales::date_format("%b %d")) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Combine and Adjust Layout -------- #
combined_plot <- (Plot_A + Plot_B) / (Plot_C + Plot_D) +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(size = 20, face = "bold"),
plot.tag.position = c(0, 1.1))  # More space between tag and plot
# Save to file
output_dir <- file.path(data_path, "Figures/")
if (!dir.exists(output_dir)) dir.create(output_dir, recursive = TRUE)
ggsave(file.path(output_dir, "Plot_final_with_gridlines_and_xticks.png"), combined_plot, width = 14, height = 12, dpi = 300)
# Save to file
output_dir <- file.path(data_path, "Figures/")
ggsave(file.path(output_dir, "Plot_final.pdf"), combined_plot, width = 14, height = 12, dpi = 300, device = cairo_pdf)
# ------- Plot A: Daytime Violin Plot (no x-title) -------- #
Plot_A <- ggplot(microclimate_shield_day, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3, position = position_dodge(width = 0.7)) +
labs(y = "Max temp (°C) at 1 cm (06:00 - 21:00)") +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(emmeans)
library(extrafont)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
microclimate_shield_date_day$yday <- format(microclimate_shield_date_day$Date, "%j")
microclimate_shield_date_day$yday = as.numeric(microclimate_shield_date_day$yday)
microclimate_shield_date_night$yday <- format(microclimate_shield_date_night$Date, "%j")
microclimate_shield_date_night$yday = as.numeric(microclimate_shield_date_night$yday)
microclimate_shield_date_day$midshield_binomial<-as.integer(if_else(microclimate_shield_date_day$midshield=="present", 1, 0))
microclimate_shield_date_night$midshield_binomial<-as.integer(if_else(microclimate_shield_date_night$midshield=="present", 1, 0))
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
# ------- Plot A: Daytime Violin Plot (no x-title) -------- #
Plot_A <- ggplot(microclimate_shield_day, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3, position = position_dodge(width = 0.7)) +
labs(y = "Max temp (°C) at 1 cm (06:00 - 21:00)") +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot B: Daytime Time Series (no x-title) -------- #
Plot_B <- ggplot(microclimate_shield_date_day, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
labs(y = "Max daily temp (°C) at 1 cm (06:00 - 21:00)" +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_x_date(breaks = scales::date_breaks("3 days"),
labels = scales::date_format("%b %d")) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot C: Nighttime Violin Plot -------- #
Plot_C <- ggplot(microclimate_shield_night, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
# ------- Plot A: Daytime Violin Plot (no x-title) -------- #
Plot_A <- ggplot(microclimate_shield_day, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3, position = position_dodge(width = 0.7)) +
labs(y = "Max temp (°C) at 1 cm (06:00 - 21:00)") +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot B: Daytime Time Series (no x-title) -------- #
Plot_B <- ggplot(microclimate_shield_date_day, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
labs(y = "Max daily temp (°C) at 1 cm (06:00 - 21:00)") +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_x_date(breaks = scales::date_breaks("3 days"),
labels = scales::date_format("%b %d")) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot C: Nighttime Violin Plot -------- #
Plot_C <- ggplot(microclimate_shield_night, aes(x = factor(midshield, levels = c('present', 'absent')), y = max_T2_95, color = midshield, fill = midshield)) +
geom_violin(position = position_dodge(width = 0.7), alpha = 0.3, width = 0.6) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.5, position = position_dodge(width = 0.7), alpha = 0.3) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16, position = position_dodge(width = 0.7)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3, position = position_dodge(width = 0.7)) +
labs(x = "Shield configuration", y = "Max temp (°C) at 1 cm (21:00 - 06:00)") +
theme_minimal() +
theme(
axis.text.x = element_text(family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16, margin = margin(t = 10)),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Plot D: Nighttime Time Series -------- #
Plot_D <- ggplot(microclimate_shield_date_night, aes(x = Date, y = max_T2, color = midshield, fill = midshield)) +
stat_summary(fun = mean, geom = "point", size = 4, shape = 16) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1, alpha = 0.7, aes(group = midshield)) +
labs(x = "Date", y = "Max daily temp (°C) at 1 cm (21:00 - 06:00)") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, family = "Arial", size = 16),
axis.title.x = element_text(family = "Arial", size = 16, margin = margin(t = 10)),
axis.text.y = element_text(family = "Arial", size = 16),
axis.title.y = element_text(family = "Arial", size = 16, margin = margin(r = 10)),
legend.position = "none"
) +
scale_x_date(breaks = scales::date_breaks("3 days"),
labels = scales::date_format("%b %d")) +
scale_color_manual(values = shield_colors) +
scale_fill_manual(values = shield_colors)
# ------- Combine and Adjust Layout -------- #
combined_plot <- (Plot_A + Plot_B) / (Plot_C + Plot_D) +
theme(plot.tag = element_text(size = 20, face = "bold"),
plot.tag.position = c(0, 1.1))  # More space between tag and plot
# Save to file
output_dir <- file.path(data_path, "Figures/")
if (!dir.exists(output_dir)) dir.create(output_dir, recursive = TRUE)
ggsave(file.path(output_dir, "Plot_final.pdf"), combined_plot, width = 14, height = 12, dpi = 300, device = cairo_pdf)
