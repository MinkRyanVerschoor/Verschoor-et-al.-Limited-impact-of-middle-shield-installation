source("config.R")
# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(emmeans)
library(extrafont)
library(bayesplot)
library(posterior)
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
microclimate_shield_date_day$yday <- format(microclimate_shield_date_day$Date, "%j")
microclimate_shield_date_day$yday = as.numeric(microclimate_shield_date_day$yday)
microclimate_shield_date_night$yday <- format(microclimate_shield_date_night$Date, "%j")
microclimate_shield_date_night$yday = as.numeric(microclimate_shield_date_night$yday)
microclimate_shield_date_day$midshield_binomial<-as.integer(if_else(microclimate_shield_date_day$midshield=="present", 1, 0))
microclimate_shield_date_night$midshield_binomial<-as.integer(if_else(microclimate_shield_date_night$midshield=="present", 1, 0))
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
#--------- Day ----------#
#For the total
m_max_T_95_shield_day = brm(max_T2_95 ~ midshield + (1|div), data = microclimate_shield_day,   chains = 4,
iter=4000,
warmup=1000)
plot(m_max_T_95_shield_day)
pp_check(m_max_T_95_shield_day)
summary(m_max_T_95_shield_day)
saveRDS(m_max_T_95_shield_day, file = "m_max_T_95_shield_day.rds")
sink("m_max_T_95_shield_day_summary.txt")
print(summary(m_max_T_95_shield_day))
sink()
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_95_shield_day_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_95_shield_day_pp_plot <- pp_check(m_max_T_95_shield_day)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_95_shield_day_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
# Sensitivity analysis for Day Total
m_max_T_90_shield_day <- update(m_max_T_shield_day, formula = max_T2_90 ~ .)
# Sensitivity analysis for Day Total
m_max_T_90_shield_day <- update(m_max_T_95_shield_day, formula = max_T2_90 ~ .)
# Sensitivity analysis for Day Total
m_max_T_90_shield_day <- update(m_max_T_95_shield_day, formula = max_T2_90 ~ ., newdata = microclimate_shield_day)
m_max_T_99_shield_day <- update(m_max_T_95_shield_day, formula = max_T2_99 ~ ., newdata = microclimate_shield_day)
m_max_T_abs_shield_day <- update(m_max_T_95_shield_day, formula = max_T2 ~ ., newdata = microclimate_shield_day)
posterior_day_90 <- as_draws_df(m_max_T_90_shield_day)
posterior_day_95 <- as_draws_df(m_max_T_95_shield_day)
posterior_day_99 <- as_draws_df(m_max_T_99_shield_day)
posterior_day_abs <- as_draws_df(m_max_T_abs_shield_day)
mcmc_areas(
list(
"90th" = posterior_day_90$b_midshieldTRUE,
"95th" = posterior_day_95$b_midshieldTRUE,
"99th" = posterior_day_99$b_midshieldTRUE,
"Abs Max" = posterior_day_abs$b_midshieldTRUE
),
prob = 0.95
)
View(posterior_day_90)
mcmc_areas(
list(
"90th" = posterior_day_90$b_midshieldpresent,
"95th" = posterior_day_95$b_midshieldpresent,
"99th" = posterior_day_99$b_midshieldpresent,
"Abs Max" = posterior_day_abs$b_midshieldpresent
),
prob = 0.95
)
# Create a long-format data frame for the midshield coefficient
posterior_combined <- bind_rows(
data.frame(draw = posterior_day_90$b_midshieldpresent, model = "90th"),
data.frame(draw = posterior_day_95$b_midshieldpresent, model = "95th"),
data.frame(draw = posterior_day_99$b_midshieldpresent, model = "99th"),
data.frame(draw = posterior_day_abs$b_midshieldpresent, model = "Abs Max")
)
# Plot using bayesplot::mcmc_areas
mcmc_areas(
posterior_combined %>%
pivot_wider(names_from = model, values_from = draw) %>%
as.matrix(),
prob = 0.95
)
# Create a named list of draws for midshieldpresent from each model
draws_list <- list(
"90th" = posterior_day_90$b_midshieldpresent,
"95th" = posterior_day_95$b_midshieldpresent,
"99th" = posterior_day_99$b_midshieldpresent,
"Abs Max" = posterior_day_abs$b_midshieldpresent
)
# Convert to matrix where each column is a chain
draws_matrix <- do.call(cbind, draws_list)
# Use mcmc_areas
mcmc_areas(draws_matrix, prob = 0.95)
# ----------- Day Per day ----------#
priors<-prior(cauchy(0,0.5), coef=midshield_binomial)
m_max_T_95_shield_date_day <- brm(
max_T2_95 ~ midshield_binomial * yday + (1|div),
prior=priors,
data = microclimate_shield_date_day,
chains = 4,
iter=4000,
warmup=1000)
plot(m_max_T_95_shield_date_day)
summary(m_max_T_95_shield_date_day)
saveRDS(m_max_T_95_shield_date_day, file = "m_max_T_95_shield_date_day.rds")
sink("m_max_T_95_shield_date_day_summary.txt")
print(summary(m_max_T_95_shield_date_day))
sink()
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_95_shield_date_day_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_95_shield_date_day_pp_plot <- pp_check(m_max_T_95_shield_date_day)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_95_shield_date_day_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
# Sensitivity analysis for Day per day
m_max_T_90_shield_date_day <- update(m_max_T_95_shield_date_day, formula = max_T2_90 ~ ., newdata = microclimate_shield_date_day)
m_max_T_99_shield_date_day <- update(m_max_T_95_shield_date_day, formula = max_T2_99 ~ ., newdata = microclimate_shield_date_day)
m_max_T_abs_shield_date_day <- update(m_max_T_95_shield_date_day, formula = max_T2 ~ ., newdata = microclimate_shield_date_day)
posterior_date_day_90 <- as_draws_df(m_max_T_90_shield_date_day)
posterior_date_day_95 <- as_draws_df(m_max_T_95_shield_date_day)
posterior_date_day_99 <- as_draws_df(m_max_T_99_shield_date_day)
posterior_date_day_abs <- as_draws_df(m_max_T_shield_date_day)
posterior_date_day_90 <- as_draws_df(m_max_T_90_shield_date_day)
posterior_date_day_95 <- as_draws_df(m_max_T_95_shield_date_day)
posterior_date_day_99 <- as_draws_df(m_max_T_99_shield_date_day)
posterior_date_day_abs <- as_draws_df(m_max_T_abs_shield_date_day)
# Create a named list of draws for midshieldpresent from each model
draws_list <- list(
"90th" = posterior_date_day_90$b_midshieldpresent,
"95th" = posterior_date_day_95$b_midshieldpresent,
"99th" = posterior_date_day_99$b_midshieldpresent,
"Abs Max" = posterior_date_day_abs$b_midshieldpresent
)
View(posterior_date_day_90)
# Create a named list of draws for midshieldpresent from each model
draws_list <- list(
"90th" = posterior_date_day_90$b_midshield_binomial,
"95th" = posterior_date_day_95$b_midshield_binomial,
"99th" = posterior_date_day_99$b_midshield_binomial,
"Abs Max" = posterior_date_day_abs$b_midshield_binomial
)
# Convert to matrix where each column is a chain
draws_matrix <- do.call(cbind, draws_list)
# Use mcmc_areas
mcmc_areas(draws_matrix, prob = 0.95)
# Use mcmc_areas
comparison_plot_date_day = mcmc_areas(draws_matrix, prob = 0.95)
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "comparison_plot_date_day.jpg")
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = comparison_plot_date_day,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
saveRDS(m_max_T_90_shield_date_day, file = "m_max_T_90_shield_date_day.rds")
sink("m_max_T_90_shield_date_day_summary.txt")
print(summary(m_max_T_90_shield_date_day))
sink()
saveRDS(m_max_T_99_shield_date_day, file = "m_max_T_99_shield_date_day.rds")
sink("m_max_T_99_shield_date_day_summary.txt")
print(summary(m_max_T_99_shield_date_day))
sink()
saveRDS(m_max_T_abs_shield_date_day, file = "m_max_T_abs_shield_date_day.rds")
sink("m_max_T_abs_shield_date_day_summary.txt")
print(summary(m_max_T_abs_shield_date_day))
sink()
saveRDS(m_max_T_95_shield_date_day, file = "m_max_T_95_shield_date_day.rds")
sink("m_max_T_95_shield_date_day_summary.txt")
print(summary(m_max_T_95_shield_date_day))
sink()
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_95_shield_date_day_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_95_shield_date_day_pp_plot <- pp_check(m_max_T_95_shield_date_day)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_95_shield_date_day_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
# Chunk 1: renv environment
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
# Load configuration settings for collaborative data loading
source("config.R")
# Define the output directory
output_dir <- file.path(data_path, "/Figures")
# Chunk 2: packages
# Loading and installing the required Packages
#General
library(tidyverse)
library(data.table)
library(MetBrewer)
library(ggh4x)
library(ggsignif)
library(patchwork)
library(lme4)
library(brms)
library(emmeans)
library(extrafont)
library(bayesplot)
library(posterior)
# Chunk 3: Loading in the data
#GENERAL NOTE#
# ----- Load in the data --------#
microclimate_shield_day = load_data("microclimate_shield_total_day.csv") |>
mutate(across(where(is.integer), as.factor))
microclimate_shield_night = load_data("microclimate_shield_total_night.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_day = load_data("microclimate_shield_date_day.csv")|>
mutate(across(where(is.integer), as.factor))
microclimate_shield_date_night = load_data("microclimate_shield_date_night.csv")|>
mutate(across(where(is.integer), as.factor))
# Ensure that Date is in Date format
microclimate_shield_date_day$Date <- as.Date(microclimate_shield_date_day$Date)
microclimate_shield_date_night$Date <- as.Date(microclimate_shield_date_night$Date)
microclimate_shield_date_day$yday <- format(microclimate_shield_date_day$Date, "%j")
microclimate_shield_date_day$yday = as.numeric(microclimate_shield_date_day$yday)
microclimate_shield_date_night$yday <- format(microclimate_shield_date_night$Date, "%j")
microclimate_shield_date_night$yday = as.numeric(microclimate_shield_date_night$yday)
microclimate_shield_date_day$midshield_binomial<-as.integer(if_else(microclimate_shield_date_day$midshield=="present", 1, 0))
microclimate_shield_date_night$midshield_binomial<-as.integer(if_else(microclimate_shield_date_night$midshield=="present", 1, 0))
# Chunk 4: Setting up the color palette and fonts
# Load the color palette and ensure it has enough colors for the unique levels in `treatment`
# Define the specific colors for each treatment
palette <- met.brewer("Lakota", n = 6, type = "discrete")
# Create the expanded palette for the gradient (12 colors for 12 species)
shield_colors <- c(
"present" = palette[5],
"absent" = palette[3])
loadfonts(device = "all")    # Loads the fonts
#--------- Night ----------#
#For the total
m_max_T_95_shield_night = brm(max_T2_95 ~ midshield + (1|div), data = microclimate_shield_night,   chains = 4,
iter=4000,
warmup=1000)
plot(m_max_T_95_shield_night)
pp_check(m_max_T_95_shield_night)
summary(m_max_T_95_shield_night)
saveRDS(m_max_T_95_shield_night, file = "m_max_T_95_shield_night.rds")
sink("m_max_T_95_shield_night_summary.txt")
print(summary(m_max_T_95_shield_night))
sink()
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_95_shield_night_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_95_shield_night_pp_plot <- pp_check(m_max_T_95_shield_night)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_95_shield_night_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
# Sensitivity analysis for Day per day
m_max_T_90_shield_night <- update(m_max_T_95_shield_night, formula = max_T2_90 ~ ., newdata = microclimate_shield_night)
saveRDS(m_max_T_90_shield_night, file = "m_max_T_90_shield_night.rds")
sink("m_max_T_90_shield_night_summary.txt")
print(summary(m_max_T_90_shield_night))
sink()
m_max_T_99_shield_night <- update(m_max_T_95_shield_night, formula = max_T2_99 ~ ., newdata = microclimate_shield_night)
saveRDS(m_max_T_99_shield_night, file = "m_max_T_99_shield_night.rds")
sink("m_max_T_99_shield_night_summary.txt")
print(summary(m_max_T_99_shield_night))
sink()
m_max_T_abs_shield_night <- update(m_max_T_95_shield_night, formula = max_T2 ~ ., newdata = microclimate_shield_night)
saveRDS(m_max_T_abs_shield_night, file = "m_max_T_abs_shield_night.rds")
sink("m_max_T_abs_shield_night_summary.txt")
print(summary(m_max_T_abs_shield_night))
sink()
posterior_night_90 <- as_draws_df(m_max_T_90_shield_night)
posterior_night_95 <- as_draws_df(m_max_T_95_shield_night)
posterior_night_99 <- as_draws_df(m_max_T_99_shield_night)
posterior_night_abs <- as_draws_df(m_max_T_abs_shield_night)
# Create a named list of draws for midshieldpresent from each model
draws_list <- list(
"90th" = posterior_night_90$b_midshieldpresent,
"95th" = posterior_night_95$b_midshieldpresent,
"99th" = posterior_night_99$b_midshieldpresent,
"Abs Max" = posterior_night_abs$b_midshieldpresent
)
# Convert to matrix where each column is a chain
draws_matrix <- do.call(cbind, draws_list)
# Use mcmc_areas
comparison_plot_night = mcmc_areas(draws_matrix, prob = 0.95)
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "comparison_plot_night.jpg")
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = comparison_plot_night,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
# Use mcmc_areas
comparison_plot_night = mcmc_areas(draws_matrix, prob = 0.95)
comparison_plot_night
# --------- Night Per day ---------- #
priors<-prior(cauchy(0,0.5), coef=midshield_binomial)
m_max_T_95_shield_date_night <- brm(
max_T2_95 ~ midshield_binomial * ynight + (1|div),
prior=priors,
data = microclimate_shield_date_night,
chains = 4,
iter=4000,
warmup=1000)
# --------- Night Per day ---------- #
priors<-prior(cauchy(0,0.5), coef=midshield_binomial)
m_max_T_95_shield_date_night <- brm(
max_T2_95 ~ midshield_binomial * yday + (1|div),
prior=priors,
data = microclimate_shield_date_night,
chains = 4,
iter=4000,
warmup=1000)
plot(m_max_T_95_shield_date_night)
summary(m_max_T_95_shield_date_night)
saveRDS(m_max_T_95_shield_date_night, file = "m_max_T_95_shield_date_night.rds")
sink("m_max_T_95_shield_date_night_summary.txt")
print(summary(m_max_T_95_shield_date_night))
sink()
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_95_shield_date_night_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_95_shield_date_night_pp_plot <- pp_check(m_max_T_95_shield_date_night)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_95_shield_date_night_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
# Sensitivity analysis for night per night
m_max_T_90_shield_date_night <- update(m_max_T_90_shield_date_night, formula = max_T2_90 ~ ., newdata = microclimate_shield_date_night)
# Sensitivity analysis for night per night
m_max_T_90_shield_date_night <- update(m_max_T_95_shield_date_night, formula = max_T2_90 ~ ., newdata = microclimate_shield_date_night)
m_max_T_99_shield_date_night <- update(m_max_T_95_shield_date_night, formula = max_T2_99 ~ ., newdata = microclimate_shield_date_night)
saveRDS(m_max_T_95_shield_date_night, file = "m_max_T_95_shield_date_night.rds")
sink("m_max_T_95_shield_date_night_summary.txt")
print(summary(m_max_T_95_shield_date_night))
sink()
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_95_shield_date_night_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_95_shield_date_night_pp_plot <- pp_check(m_max_T_95_shield_date_night)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_95_shield_date_night_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
saveRDS(m_max_T_90_shield_date_night, file = "m_max_T_90_shield_date_night.rds")
sink("m_max_T_90_shield_date_night_summary.txt")
print(summary(m_max_T_90_shield_date_night))
sink()
saveRDS(m_max_T_99_shield_date_night, file = "m_max_T_99_shield_date_night.rds")
sink("m_max_T_99_shield_date_night_summary.txt")
print(summary(m_max_T_99_shield_date_night))
sink()
m_max_T_abs_shield_date_night <- update(m_max_T_95_shield_date_night, formula = max_T2 ~ ., newdata = microclimate_shield_date_night)
saveRDS(m_max_T_abs_shield_date_night, file = "m_max_T_abs_shield_date_night.rds")
sink("m_max_T_abs_shield_date_night_summary.txt")
print(summary(m_max_T_abs_shield_date_night))
sink()
posterior_date_night_90 <- as_draws_df(m_max_T_90_shield_date_night)
posterior_date_night_95 <- as_draws_df(m_max_T_95_shield_date_night)
posterior_date_night_99 <- as_draws_df(m_max_T_99_shield_date_night)
posterior_date_night_abs <- as_draws_df(m_max_T_abs_shield_date_night)
# Create a named list of draws for midshieldpresent from each model
draws_list <- list(
"90th" = posterior_date_night_90$b_midshield_binomial,
"95th" = posterior_date_night_95$b_midshield_binomial,
"99th" = posterior_date_night_99$b_midshield_binomial,
"Abs Max" = posterior_date_night_abs$b_midshield_binomial
)
# Convert to matrix where each column is a chain
draws_matrix <- do.call(cbind, draws_list)
# Use mcmc_areas
comparison_plot_date_night = mcmc_areas(draws_matrix, prob = 0.95)
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "comparison_plot_date_night.jpg")
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = comparison_plot_date_night,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
comparison_plot_date_night
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "comparison_plot_date_night.jpg")
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = comparison_plot_date_night,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
#--------- Day ----------#
#For the total
m_max_T_95_shield_day = brm(max_T2_95 ~ midshield + (1|div), data = microclimate_shield_day,   chains = 4,
iter=4000,
warmup=1000)
plot(m_max_T_95_shield_day)
pp_check(m_max_T_95_shield_day)
summary(m_max_T_95_shield_day)
saveRDS(m_max_T_95_shield_day, file = "m_max_T_95_shield_day.rds")
sink("m_max_T_95_shield_day_summary.txt")
print(summary(m_max_T_95_shield_day))
sink()
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "m_max_T_95_shield_day_pp_plot.jpg")
# Generate the pp_check plot and assign it to an object
m_max_T_95_shield_day_pp_plot <- pp_check(m_max_T_95_shield_day)
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = m_max_T_95_shield_day_pp_plot,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
# Sensitivity analysis for Day per day
m_max_T_90_shield_day <- update(m_max_T_95_shield_day, formula = max_T2_90 ~ ., newdata = microclimate_shield_day)
saveRDS(m_max_T_90_shield_day, file = "m_max_T_90_shield_day.rds")
sink("m_max_T_90_shield_day_summary.txt")
print(summary(m_max_T_90_shield_day))
sink()
m_max_T_99_shield_day <- update(m_max_T_95_shield_day, formula = max_T2_99 ~ ., newdata = microclimate_shield_day)
saveRDS(m_max_T_99_shield_day, file = "m_max_T_99_shield_day.rds")
sink("m_max_T_99_shield_day_summary.txt")
print(summary(m_max_T_99_shield_day))
sink()
m_max_T_abs_shield_day <- update(m_max_T_95_shield_day, formula = max_T2 ~ ., newdata = microclimate_shield_day)
saveRDS(m_max_T_abs_shield_day, file = "m_max_T_abs_shield_day.rds")
sink("m_max_T_abs_shield_day_summary.txt")
print(summary(m_max_T_abs_shield_day))
sink()
posterior_day_90 <- as_draws_df(m_max_T_90_shield_day)
posterior_day_95 <- as_draws_df(m_max_T_95_shield_day)
posterior_day_99 <- as_draws_df(m_max_T_99_shield_day)
posterior_day_abs <- as_draws_df(m_max_T_abs_shield_day)
# Create a named list of draws for midshieldpresent from each model
draws_list <- list(
"90th" = posterior_day_90$b_midshieldpresent,
"95th" = posterior_day_95$b_midshieldpresent,
"99th" = posterior_day_99$b_midshieldpresent,
"Abs Max" = posterior_day_abs$b_midshieldpresent
)
# Convert to matrix where each column is a chain
draws_matrix <- do.call(cbind, draws_list)
# Use mcmc_areas
comparison_plot_day = mcmc_areas(draws_matrix, prob = 0.95)
comparison_plot_day
# Save as JPG
# Define the full file path for the plot
output_file_plot1 <- file.path(output_dir, "comparison_plot_day.jpg")
# Save the plot as a high-resolution PNG
ggsave(filename = output_file_plot1,
plot = comparison_plot_day,
width = 8,        # Width in inches
height = 6,       # Height in inches
dpi = 300)
# clear everything in the R environment
rm(list = ls())
# restore the library
renv::restore()
install.packages("jsonlite", type = "binary")
# restore the library
renv::restore()
# restore the library
renv::restore()
